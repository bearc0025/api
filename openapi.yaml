openapi: 3.0.1
info:
  title: My API
  version: '1.0'
  description: some api...
  termsOfService: https://www.example.com/tos
  contact:
    email: team@example.com
    name: Support Team
    url: https://www.example.com/contact
  license:
    name: License
    url: https://www.example.com/license
servers:
  - url: http://localhost:3000
    variables: {}
    description: my local fake server
  - url: https://my-json-server.typicode.com/bearc0025/api
    variables: {}
    description: github fake server
paths:
  /users:
    summary: fetch and create users
    description: return and store users on server
    get:
      summary: fetch and create users from server
      description: fetch and store users from server
      operationId: fetchUsers
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FullUser'
        default:
          description: Default error sample response
      tags:
        - Users
    post:
      summary: create a new user
      description: store user on server
      operationId: createUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostNewUser'
      responses:
        '201':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FullUser'
        default:
          description: Default error sample response
      tags:
        - Users
components:
  schemas:
    PostNewUser:
      type: object
      properties:
        username:
          type: string
          example: bearc
        score:
          type: integer
          example: 55
        active:
          type: boolean
          example: true
    FullUser:
      type: object
      properties:
        id:
          type: string
          example: 1234abc
        username:
          type: string
          example: bearc
        score:
          type: integer
          example: 55
        active:
          type: boolean
          example: true
