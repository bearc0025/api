openapi: 3.0.1
info:
  title: My API
  version: '1.0'
  description: some api that...
  termsOfService: https://www.example.com/
  contact:
    email: contact@example.com
    name: Support Team
    url: https://www.example.com/support
  license:
    name: License
    url: https://www.example.com/license
servers:
  - url: http://localhost:{port}
    variables:
      port:
        default: '3000'
        enum:
          - '3000'
          - '4001'
          - '3002'
        description: 'test: 3000, dev: 4001, prod: 3002'
    description: local fake server
  - url: https://my-json-server.typicode.com/bearc0025/api
    variables: {}
    description: github fake server
paths:
  /users:
    summary: user operations
    description: fetch users and create new users
    get:
      summary: fetch users
      description: returns users from server
      operationId: fetchUsers
      responses:
        '200':
          $ref: '#/components/responses/UserArrayRespBody'
        default:
          description: Default error sample response
      tags:
        - Users
    post:
      summary: create a new user
      description: store user on server
      operationId: createUser
      requestBody:
        $ref: '#/components/requestBodies/UserPostBody'
      responses:
        '201':
          $ref: '#/components/responses/UserRespBody'
        default:
          description: Default error sample response
      tags:
        - Users
  /users/{userId}:
    summary: individual user operations
    description: get, update and delete users
    parameters:
      - $ref: '#/components/parameters/UserId'
    get:
      summary: fetch a user
      description: returns a user from the server
      operationId: fetchUser
      responses:
        '200':
          $ref: '#/components/responses/UserRespBody'
        default:
          description: Default error sample response
      tags:
        - Users
    delete:
      summary: delete a user
      description: remove user from server
      operationId: deleteUser
      responses:
        default:
          description: Default error sample response
      tags:
        - Users
    patch:
      summary: update a user
      description: change data on server
      operationId: updateUser
      requestBody:
        $ref: '#/components/requestBodies/UserPostBody'
      responses:
        '200':
          $ref: '#/components/responses/UserRespBody'
        default:
          description: Default error sample response
      tags:
        - Users
components:
  parameters:
    UserId:
      name: userId
      in: path
      required: true
      description: user id
      schema:
        type: string
        example: qwerty
  requestBodies:
    UserPostBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PostNewUser'
  responses:
    UserRespBody:
      description: successful response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FullUser'
    UserArrayRespBody:
      description: user array
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserArray'
  schemas:
    UserArray:
      type: array
      items:
        $ref: '#/components/schemas/FullUser'
    PostNewUser:
      type: object
      properties:
        username:
          type: string
          example: asdfdas
        score:
          type: integer
          example: 56
        active:
          type: boolean
          example: true
    FullUser:
      allOf:
        - $ref: '#/components/schemas/PostNewUser'
        - type: object
          properties:
            id:
              type: string
              example: asdfasd
